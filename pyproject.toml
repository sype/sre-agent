[project]
name = "sre_agent"
version = "0.0.1"
description = "Template description package."
authors = [{ name = "Fuzzy Labs", email = "info@fuzzylabs.ai" }]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "google-genai>=1.19.0",
]

[dependency-groups]
ci = [
    "anthropic>=0.49.0",
    "fastapi>=0.115.12",
    "mcp>=1.6.0",
    "pydantic>=2.11.3",
    "pydantic-settings>=2.9.1",
    "python-dotenv>=1.1.0",
    "types-requests>=2.32.0.20250328",
    "llamafirewall>=1.0.2",
    "shared",
    "transformers>=4.51.3",
]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "licensecheck>=2024.1.2",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "--cov=sre_agent --cov-report term-missing"
testpaths = ["tests"]

# mypy configuration
[tool.mypy]
show_error_codes = true
exclude = ["docs", "tests", "LICENSE"]
strict = true
namespace_packages = true
ignore_missing_imports = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
    "google",
    "google.*",
    "transformers",
    "transformers.*",
    "llamafirewall",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "sre_agent.llm.utils.adapters",
]
disable_error_code = ["no-any-return"]

# black configuration
[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[tool.ruff]
target-version = "py312"


# Match black. Note that this also checks comment line length, but black does not format comments.
line-length = 88

show-fixes = true

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "Q",   # flake8-quotes
    "ISC", # flake8-implicit-str-concat
    "F",   # pyflakes
    "D",   # pydocstyle
    "E",   # pycodestyle error
    "W",   # pycodestyle warning
    "N",   # pep8-naming
    "I",   # isort
    "PL",  # pylint rules from categories "Convention", "Error", and "Warning"
    "PLE", # ruff currently implements only a subset of pylint's rules
    "PLW", # pylint warning
    "PLR", # pylint refactor
    "UP",  # pyupgrade
    "C",   # Complexity (mccabe+) & comprehensions
]
ignore = [
    "UP006", # See https://github.com/bokeh/bokeh/issues/13143
    "UP007", # See https://github.com/bokeh/bokeh/pull/13144
]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 10.
max-complexity = 10


# typos configuration
[tool.typos.files]
extend-exclude = [
    ".gitignore",
    "LICENSE",
    ".*",
    "*servers*",
    "*values-secrets.yaml",
]

[tool.typos.default.extend-words]
center = "center"
Initialize = "Initialize"
initialize = "initialize"
Initialized = "Initialized"
Authorization = "Authorization"
EC = "EC"

[tool.typos.default]
locale = "en-gb"

# Bandit configuration
[tool.bandit]
exclude_dirs = []
skips = ["B104"]

[tool.bandit.assert_used]
skips = ['*test.py', '*/test_*.py']

[tool.uv.workspace]
members = [
    "sre_agent/llm",
    "sre_agent/client",
    "sre_agent/servers/prompt_server",
    "sre_agent/firewall",
]

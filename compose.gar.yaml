services:
  slack:
    image: ${CLOUDSDK_COMPUTE_REGION}-docker.pkg.dev/${CLOUDSDK_CORE_PROJECT}/mcp/slack:dev
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_TEAM_ID=${SLACK_TEAM_ID}
      - TRANSPORT=SSE
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5
  kubernetes:
    image: ${CLOUDSDK_COMPUTE_REGION}-docker.pkg.dev/${CLOUDSDK_CORE_PROJECT}/mcp/kubernetes:dev
    volumes:
      - ~/.config/gcloud:/home/appuser/.config/gcloud
    environment:
      - TRANSPORT=SSE
      - CLOUDSDK_CORE_PROJECT=${CLOUDSDK_CORE_PROJECT}
      - CLOUDSDK_COMPUTE_REGION=${CLOUDSDK_COMPUTE_REGION}
      - GOOGLE_APPLICATION_CREDENTIALS=/home/appuser/.config/gcloud/application_default_credentials.json
      - TARGET_GKE_CLUSTER_NAME=${TARGET_GKE_CLUSTER_NAME}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5
  github:
    image: ${CLOUDSDK_COMPUTE_REGION}-docker.pkg.dev/${CLOUDSDK_CORE_PROJECT}/mcp/github:dev
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - TRANSPORT=SSE
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5
  prompt-server:
    image: ${CLOUDSDK_COMPUTE_REGION}-docker.pkg.dev/${CLOUDSDK_CORE_PROJECT}/mcp/prompt-server:dev
    environment:
      - GITHUB_ORGANISATION=${GITHUB_ORGANISATION}
      - GITHUB_REPO_NAME=${GITHUB_REPO_NAME}
      - PROJECT_ROOT=${PROJECT_ROOT}
      - DIAGNOSE_PROMPT_TEMPLATE=${DIAGNOSE_PROMPT_TEMPLATE}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5

  llm-server:
    image: ${CLOUDSDK_COMPUTE_REGION}-docker.pkg.dev/${CLOUDSDK_CORE_PROJECT}/mcp/llm-server:dev
    environment:
      - PROVIDER=${PROVIDER}
      - MODEL=${MODEL}
      - MAX_TOKENS=1000
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 5s
      timeout: 3s
      retries: 5

  orchestrator:
    image: ${CLOUDSDK_COMPUTE_REGION}-docker.pkg.dev/${CLOUDSDK_CORE_PROJECT}/mcp/sre-orchestrator:dev
    volumes:
      - source: ~/.cache/huggingface
        target: /root/.cache/huggingface
        type: bind
        bind:
          create_host_path: true
    ports:
      - "8003:80"
    environment:
      - DEV_BEARER_TOKEN=${DEV_BEARER_TOKEN}
      - QUERY_TIMEOUT=300
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - TOOLS=${TOOLS}
      - SLACK_CHANNEL_ID=${SLACK_CHANNEL_ID}
      - SERVICES=${SERVICES}
      - HF_TOKEN=${HF_TOKEN}

services:
  slack:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/slack:latest
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_TEAM_ID=${SLACK_TEAM_ID}
      - TRANSPORT=SSE
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5

  kubernetes:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/kubernetes:latest
    volumes:
      - ~/.aws:/home/appuser/.aws
    environment:
      - TRANSPORT=SSE
      - AWS_REGION=${AWS_REGION}
      - TARGET_EKS_CLUSTER_NAME=${TARGET_EKS_CLUSTER_NAME}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5

  github:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/github:latest
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - TRANSPORT=SSE
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 5s
      timeout: 3s
      retries: 5

  prompt-server:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/prompt-server:latest
    environment:
      - GITHUB_ORGANISATION=${GITHUB_ORGANISATION}
      - GITHUB_REPO_NAME=${GITHUB_REPO_NAME}
      - PROJECT_ROOT=${PROJECT_ROOT}
      - DIAGNOSE_PROMPT_TEMPLATE=${DIAGNOSE_PROMPT_TEMPLATE}

  llm-server:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/llm-server:latest
    environment:
      - PROVIDER=${PROVIDER}
      - MODEL=${MODEL}
      - MAX_TOKENS=1000
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

  llama-firewall:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/llama-firewall:latest
    environment:
      - HF_TOKEN=${HF_TOKEN}

  orchestrator:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/mcp/sre-orchestrator:latest
    ports:
      - "8003:80"

    depends_on:
      slack:
        condition: service_healthy
      github:
        condition: service_healthy
      kubernetes:
        condition: service_healthy
      prompt-server:
        condition: service_healthy
      llm-server:
        condition: service_healthy
      llama-firewall:
        condition: service_healthy

    environment:
      - DEV_BEARER_TOKEN=${DEV_BEARER_TOKEN}
      - QUERY_TIMEOUT=300
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - TOOLS=${TOOLS}
      - SLACK_CHANNEL_ID=${SLACK_CHANNEL_ID}
      - SERVICES=${SERVICES}
      - HF_TOKEN=${HF_TOKEN}
